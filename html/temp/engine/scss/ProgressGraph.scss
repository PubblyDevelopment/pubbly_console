// Generic
.ProgressGraph {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
  margin: auto;

  p {
    margin: 0;
    padding: 0;
  }
}

// Spinning Wheel
.ProgressGraph_LoadLetters {
  .wrapper {
    position: relative;
    width: 100%;
    img.sizer {
      width: 100%;
      visibility: hidden;
    }
    img.fitter {
      position: absolute;
      transform: translateY(-100%);
    }
    .colors {
      position: absolute;
      transform: translateY(-100%);
      width: calc(100% - 2px);
      margin-left: 1px;
      // BOTTOM UP: THIS height from 0 to 100
      height: 100%;
      .color {
        position: absolute;
        z-index: 1;
        // TOP DOWN: THIS height from 0 to 100
        height: calc(100% - 2px);
        margin-top: 1px;
        width: calc(100% / 6);
      }
    }
  }

  p {
    position: absolute;
    width: 100%;
    text-align: center;
    // see 1
    font-size: 36px;
    word-break: break-all;
  }
}

// Spinning Wheel
.ProgressGraph_SpinningWheel {
  img {
    max-height: 100%;
    max-width: 100%;
  }
  p {
    position: absolute;
    width: 100%;
    text-align: center;
    // see 1
    font-size: 40px;
    margin: 0;
    padding: 0;
    // see 2
    margin-top: 60px;
    margin-bottom: -60px;
  }
}

/*
    Style explanation...
  
    We want a progress graph that goes from <|------to-----|>
    We want the "dot" of the progress graph to be a few pixels BIGGER than the graph itself
    We want the 0% dot to be horizontally aligned with the START of the left curve, and the 100% to be horizontally aligned with the END of the RIGHT curve. Meaning
  
    <|--------|>
     O        O
    NOT
    <|--------|>
    O          O
  
    And we want the left of the bar to be filled in #aeaeae, and the right of the bar filled in with white.
  
    soo...
  
    The bar itself is broken up into
      <|    -------------------    |>
    (left)        (middle)      (right)
  
    Left can ALWAYS be filled #aeaeae and right can ALWAYS be filled white
    because the dot itself will always overlap those parts when they should change colors
  
    We'll set the "#aeaeae" of the middle from width:0% to width:100%;
  
    Then we'll recreate the same basic setup, using a line break relative div.
    That div will have margins applied (instead of dummy left right divs) so that IT's width matches up with the above Middle width
    And we'll use hacky transform translate bumps to move the abs dot to the center of the parent
  
    So that we can move the dot with parent.margin-left: 0% --> 100%
    (and it will match up with the width of the fill)
  
    However, in order to get a nice piece of text off to the right, we'll have to wrap the dot setup in an overflow-x hidden div
    So that we don't have to manage any effects... the text will simply push off screen.
    */

$dim: 30px;
$bd: 5px;
.ProgressGraph_ScrollBar {
  max-width: 800px;
  display: block;
  margin: auto;
  .barCont {
    display: flex;
    justify-content: left;
    align-items: left;
    width: calc(100% - #{$dim * 2});
    margin: 0px $dim;
    height: $dim;

    .bar {
      display: inline-block;
      background-color: #aeaeae;
      width: 100%;
      border: $bd solid #aeaeae;
      border-radius: 15px;
      overflow: hidden;
      font-size: 0;
      .leftSide,
      .rightSide {
        height: 100%;
        transition: 0.5s;
        display: inline-block;
      }
      .leftSide {
        background-color: #aeaeae;
      }
      h4 {
        float: right;
        padding: 0;
        margin: 0;
        font-size: 22px;
        margin-top: 8px;
        margin-bottom: 8px;
        width: 65px;
        transform: translateX(100px);
      }
      .rightSide {
        background-color: white;
      }
    }
  }
  .posFix {
    position: relative;
    left: 0;
    width: calc(100% - #{$dim * 3});
    margin: auto;
    height: #{$dim + $bd};
    transform: translateY(#{0 - $dim - ($bd/2)});

    .dot {
      position: absolute;
      height: #{$dim - ($bd)};
      width: #{$dim - ($bd)};
      border: #{$bd} solid #aeaeae;
      border-radius: 50%;
      background-color: white;
      opacity: 1;
      transform: translateX(#{(($dim + $bd) / -2)});
    }
  }

  .fill {
    width: 0%;
    transition: 0.5s;
  }
  .dot {
    margin-left: 0%;
    transition: 0.5s;
  }
}

/*
  1
      Fixed height and margin means a min max
      But seems to look fine from 175x175 up
  
  2
      Soo... We just want the text to be nudged down from it's current position by 60px
      Chrome and opera? Fine, margin-top:60px; Centered, then nudged
      Firefox/Edge? Nudged, then centered (counting height AND margin)
      
      Negative margin removes Firefox/Edge gained overall height without nudging 
      (cause negative margin)
      Soo... TODO: Write mah own browser.
  */
